#!/usr/bin/env ruby

#require "rubygems"
#require "bundler/setup"
#$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '../lib')

require 'git-process/git_process_options'
require 'git-process/sync_process'
require 'git-process/git_lib'


class SyncOptions
  include GitProc::GitProcessOptions


  def extend_opts(parser)
    parser.opt :rebase, "Rebase instead of merge against the integration branch", :default => true
    parser.opt :merge, "Merge instead of rebase against the integration branch", :short => :none, :default => false
    parser.opt :force, "Force the push; defaults to true if --rebase is used", :short => :f, :default => false
    parser.opt :local, "Do not do a push; gets remote changes, but does not update the server", :short => :l, :default => false

    parser.conflicts :rebase, :merge
    parser.conflicts :local, :force
  end


  #noinspection RubyUnusedLocalVariable
  def post_parse(opts, argv)
    opts[:force] = true if opts[:rebase]
    opts[:merge] = !opts[:rebase]

    opts[:branch_name] = argv.shift
  end

end

opts = SyncOptions.new.parse_cli(File.basename(__FILE__), ARGV)
GitProc::Sync.new(GitProc::GitLib.new('.', opts), opts).run
